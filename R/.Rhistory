trips
summary(particles)
summary(particles$trip_id)
head(particles$trip_id)
head(particles$trip_id, 100)
tail(particles$trip_id, 100)
rm (particles)
make
dbDisconnect(con)
q()
particles
px <- particles[particles$progress > 1 & particles$progress < 99, ]
px$progress
head(particles)
while (TRUE) {
    t0 = as.numeric(Sys.time()) - 5 * 60 ## last 5 mins
    try({
        particles = dbGetQuery(con, sprintf("SELECT vehicle_id, (particles.trip_id) as trip_id, route_id, (distance) as distance, log_likelihood FROM particles, trips WHERE particles.trip_id=trips.trip_id AND timestamp > %s", t0))
        #AND route_id IN (SELECT route_id FROM routes WHERE route_short_name IN ('274', '224', '277', '258'))")
    })
    particles$vehicle <- as.factor(particles$vehicle_id)
    particles$progress <- particles$distance / lens[particles$route_id, "len"] * 100
    with(particles[particles$progress > 1 & particles$progress < 99, ], {
        route = as.factor(as.character(route_id))
        par(mar = c(5.1, 2.1, 1.1, 2.1))
        lh = exp(log_likelihood)
        wt = lh / sum(lh)
        plot(progress, as.numeric(route), xlim = c(0, 100), pch = 19, cex = 2 * wt,
             yaxs = "i", yaxt = "n", ylab = "", xaxs = "i", xlab = "Progress (%)")
        axis(2, at = 1:length(levels(route)), lens[levels(route), "num"], las = 2, cex.axis = 0.4)
        axis(4, at = 1:length(levels(route)), lens[levels(route), "num"], las = 2, cex.axis = 0.4)
        abline(h = 1:length(levels(route)), lty = 3, col = "#cccccc")
        abline(h = seq(1, length(levels(route)), by = 5), lty = 3, col = "#00ffff")
    })
    Sys.sleep(10)
}
while (TRUE) {
    t0 = as.numeric(Sys.time()) - 5 * 60 ## last 5 mins
    try({
        particles = dbGetQuery(con, sprintf("SELECT vehicle_id, (particles.trip_id) as trip_id, route_id, (distance) as distance, log_likelihood FROM particles, trips WHERE particles.trip_id=trips.trip_id AND timestamp > %s", t0))
        #AND route_id IN (SELECT route_id FROM routes WHERE route_short_name IN ('274', '224', '277', '258'))")
    })
    particles$vehicle <- as.factor(particles$vehicle_id)
    particles$progress <- particles$distance / lens[particles$route_id, "len"] * 100
    with(particles[particles$progress > 1 & particles$progress < 99, ], {
        route = as.factor(as.character(route_id))
        par(mar = c(5.1, 2.1, 1.1, 2.1))
        lh = exp(log_likelihood)
        wt = lh / sum(lh)
        plot(progress, as.numeric(route), xlim = c(0, 100), pch = 19, cex = 2 * wt,
             yaxt = "n", ylab = "", xaxs = "i", xlab = "Progress (%)")
        axis(2, at = 1:length(levels(route)), lens[levels(route), "num"], las = 2, cex.axis = 0.4)
        axis(4, at = 1:length(levels(route)), lens[levels(route), "num"], las = 2, cex.axis = 0.4)
        abline(h = 1:length(levels(route)), lty = 3, col = "#cccccc")
        abline(h = seq(1, length(levels(route)), by = 5), lty = 3, col = "#00ffff")
    })
    Sys.sleep(10)
}
while (TRUE) {
    t0 = as.numeric(Sys.time()) - 5 * 60 ## last 5 mins
    try({
        particles = dbGetQuery(con, sprintf("SELECT vehicle_id, (particles.trip_id) as trip_id, route_id, (distance) as distance, log_likelihood FROM particles, trips WHERE particles.trip_id=trips.trip_id AND timestamp > %s", t0))
        #AND route_id IN (SELECT route_id FROM routes WHERE route_short_name IN ('274', '224', '277', '258'))")
    })
    particles$vehicle <- as.factor(particles$vehicle_id)
    particles$progress <- particles$distance / lens[particles$route_id, "len"] * 100
    with(particles[particles$progress > 1 & particles$progress < 99, ], {
        route = as.factor(as.character(route_id))
        par(mar = c(5.1, 2.1, 1.1, 2.1))
        lh = exp(log_likelihood)
        wt = lh / sum(lh)
        plot(progress, as.numeric(route), xlim = c(0, 100), pch = 19, cex = 2 * wt + 1,
             yaxt = "n", ylab = "", xaxs = "i", xlab = "Progress (%)")
        axis(2, at = 1:length(levels(route)), lens[levels(route), "num"], las = 2, cex.axis = 0.4)
        axis(4, at = 1:length(levels(route)), lens[levels(route), "num"], las = 2, cex.axis = 0.4)
        abline(h = 1:length(levels(route)), lty = 3, col = "#cccccc")
        abline(h = seq(1, length(levels(route)), by = 5), lty = 3, col = "#00ffff")
    })
    Sys.sleep(10)
}
while (TRUE) {
    t0 = as.numeric(Sys.time()) - 5 * 60 ## last 5 mins
    try({
        particles = dbGetQuery(con, sprintf("SELECT vehicle_id, (particles.trip_id) as trip_id, route_id, (distance) as distance, log_likelihood FROM particles, trips WHERE particles.trip_id=trips.trip_id AND timestamp > %s", t0))
        #AND route_id IN (SELECT route_id FROM routes WHERE route_short_name IN ('274', '224', '277', '258'))")
    })
    particles$vehicle <- as.factor(particles$vehicle_id)
    particles$progress <- particles$distance / lens[particles$route_id, "len"] * 100
    with(particles[particles$progress > 1 & particles$progress < 99, ], {
        route = as.factor(as.character(route_id))
        par(mar = c(5.1, 2.1, 1.1, 2.1))
        lh = exp(log_likelihood)
        wt = lh / sum(lh)
        plot(progress, as.numeric(route), xlim = c(0, 100), pch = 19, cex = 1, col = "#cccccc",
             yaxt = "n", ylab = "", xaxs = "i", xlab = "Progress (%)")
        points(progress, as.numeric(route), cex = 2 * wt, col = "#990000")
        axis(2, at = 1:length(levels(route)), lens[levels(route), "num"], las = 2, cex.axis = 0.4)
        axis(4, at = 1:length(levels(route)), lens[levels(route), "num"], las = 2, cex.axis = 0.4)
        abline(h = 1:length(levels(route)), lty = 3, col = "#cccccc")
        abline(h = seq(1, length(levels(route)), by = 5), lty = 3, col = "#00ffff")
    })
    Sys.sleep(10)
}
while (TRUE) {
    t0 = as.numeric(Sys.time()) - 5 * 60 ## last 5 mins
    try({
        particles = dbGetQuery(con, sprintf("SELECT vehicle_id, (particles.trip_id) as trip_id, route_id, (distance) as distance, log_likelihood, initialized FROM particles, trips WHERE particles.trip_id=trips.trip_id AND timestamp > %s", t0))
        #AND route_id IN (SELECT route_id FROM routes WHERE route_short_name IN ('274', '224', '277', '258'))")
    })
    particles$vehicle <- as.factor(particles$vehicle_id)
    particles$progress <- particles$distance / lens[particles$route_id, "len"] * 100
    with(particles[particles$progress > 1 & particles$progress < 99, ], {
        route = as.factor(as.character(route_id))
        par(mar = c(5.1, 2.1, 1.1, 2.1))
        lh = exp(log_likelihood)
        wt = lh / sum(lh)
        plot(progress, as.numeric(route), xlim = c(0, 100), pch = 19, cex = 1,
             col = ifelse(initialized, "#00990040", "#cccccc40"),
             yaxt = "n", ylab = "", xaxs = "i", xlab = "Progress (%)")
        points(progress, as.numeric(route), cex = 3 * wt, col = "#990000", pch = 19)
        axis(2, at = 1:length(levels(route)), lens[levels(route), "num"], las = 2, cex.axis = 0.4)
        axis(4, at = 1:length(levels(route)), lens[levels(route), "num"], las = 2, cex.axis = 0.4)
        abline(h = 1:length(levels(route)), lty = 3, col = "#cccccc")
        abline(h = seq(1, length(levels(route)), by = 5), lty = 3, col = "#00ffff")
    })
    Sys.sleep(10)
}
head(particles)
q()
getwd()
head(particles)
wt
vehicle
p$vehicle
head(p)
detach("p")
p$route
head(stops)
route_id
v=levels(vehicle)[1]
v
route
p$route
vr
head(lens)
detach(p)
attach(p)
x=etas[1]
x
ETAs
ETAs
x = etas[vehicle = v]
x
v
vehicle
x = etas[vehicle == v]
x
ETAs
ETAs
tr
v
ETAs
head(stops)
tr
etaMin
etaMin
etaMin
etaMax
rbind(etaMin, etaMax)
rbind(etaMin, etaMax)
ETAs
levels(vehicle)
v = levels(vehicle)[4]
ETAs
etas[vehicle==v]
p[vehicle==v, ]
levels(vehicle)
?text
?text
v
ETAs
v <- vehicles[1]
v
vehicle[1]
vehicle[1] -> v
v
etaMin
q()
while (TRUE) {
    t0 = as.numeric(Sys.time()) - 5 * 60 ## last 5 mins
    try({
        particles = dbGetQuery(con, sprintf("SELECT vehicle_id, (particles.trip_id) as trip_id, route_id, (distance) as distance, log_likelihood, initialized, etas FROM particles, trips WHERE particles.trip_id=trips.trip_id AND timestamp > %s", t0))
        #AND route_id IN (SELECT route_id FROM routes WHERE route_short_name IN ('274', '224', '277', '258'))")
    })
    particles$vehicle <- as.factor(particles$vehicle_id)
    particles$progress <- particles$distance / lens[particles$route_id, "len"] * 100
    jpeg(sprintf("~/Dropbox/PhD/routeprogress/routeprogress_%s.jpg", as.numeric(Sys.time())), width = 900, height = 700)
    with(particles[particles$progress > 1 & particles$progress < 99, ], {
        vehicle <- as.factor(as.character(vehicle))
        par(mar = c(5.1, 2.1, 1.1, 2.1))
        lh = exp(log_likelihood)
        wt = 2 * lh / max(lh)
        plot(progress, as.numeric(vehicle), xlim = c(-2, 102), type = "n",
             yaxt = "n", ylab = "", xaxs = "i", xlab = "Progress (%)")
        sapply(seq_along(levels(vehicle)), function(i) {
            lines(c(0, 100), c(i, i), col = "#666666")
        })
        sapply(levels(vehicle), function(v) {
            with(stops[stops$route_id %in% unique(route_id[vehicle == v]), ],
                 points(progress, rep(which(levels(vehicle) == v), length(progress)),
                        pch = 21, col = "#666666", bg = "white", lwd = 1))
            invisible(NULL)
        })
        #points(progress, as.numeric(vehicle), pch = 3, col = ifelse(initialized==1, "#00990020", "#cccccc30"))
        points(progress, as.numeric(vehicle), cex = wt, col = "#99000040", pch = 3)
        vr <- tapply(route_id, vehicle, function(x) x[1])
        axis(2, at = 1:length(levels(vehicle)), lens[vr, "num"], las = 3, cex.axis = 0.8)
        axis(4, at = 1:length(levels(vehicle)), lens[vr, "num"], las = 3, cex.axis = 0.8)
        ## ETAs
        sapply(levels(vehicle), function(v) {
            ETAs <- do.call(rbind, strsplit(etas[vehicle == v], ","))
            mode(ETAs) <- "integer"
            tr <- apply(ETAs, 2, quantile, probs = c(0.025, 0.975))
            xx <- stops[stops$route_id %in% unique(route_id[vehicle == v]), "progress"]
            etaMin <- ifelse(tr[1, ] == 0, "",
                             format(as.POSIXct(tr[1, ], origin = "1970-01-01"), "%H:%M"))
            etaMax <- ifelse(tr[2, ] == 0, "",
                             format(as.POSIXct(tr[2, ], origin = "1970-01-01"), "%H:%M"))
            text(xx, which(levels(vehicle) == v), etaMin, cex = 0.6, pos = 1, offset = 0.5)
            text(xx, which(levels(vehicle) == v), etaMax, cex = 0.6, pos = 3, offset = 0.5)
        })
    })
    dev.off()
    Sys.sleep(10)
}
dev.flush()
while (TRUE) {
    t0 = as.numeric(Sys.time()) - 5 * 60 ## last 5 mins
    try({
        particles = dbGetQuery(con, sprintf("SELECT vehicle_id, (particles.trip_id) as trip_id, route_id, (distance) as distance, log_likelihood, initialized, etas FROM particles, trips WHERE particles.trip_id=trips.trip_id AND timestamp > %s", t0))
        #AND route_id IN (SELECT route_id FROM routes WHERE route_short_name IN ('274', '224', '277', '258'))")
    })
    particles$vehicle <- as.factor(particles$vehicle_id)
    particles$progress <- particles$distance / lens[particles$route_id, "len"] * 100
    ##jpeg(sprintf("~/Dropbox/PhD/routeprogress/routeprogress_%s.jpg", as.numeric(Sys.time())), width = 900, height = 700)
    dev.hold()
    with(particles[particles$progress > 1 & particles$progress < 99, ], {
        vehicle <- as.factor(as.character(vehicle))
        par(mar = c(5.1, 2.1, 1.1, 2.1))
        lh = exp(log_likelihood)
        wt = 2 * lh / max(lh)
        plot(progress, as.numeric(vehicle), xlim = c(-2, 102), type = "n",
             yaxt = "n", ylab = "", xaxs = "i", xlab = "Progress (%)")
        sapply(seq_along(levels(vehicle)), function(i) {
            lines(c(0, 100), c(i, i), col = "#666666")
        })
        sapply(levels(vehicle), function(v) {
            with(stops[stops$route_id %in% unique(route_id[vehicle == v]), ],
                 points(progress, rep(which(levels(vehicle) == v), length(progress)),
                        pch = 21, col = "#666666", bg = "white", lwd = 1))
            invisible(NULL)
        })
        #points(progress, as.numeric(vehicle), pch = 3, col = ifelse(initialized==1, "#00990020", "#cccccc30"))
        points(progress, as.numeric(vehicle), cex = wt, col = "#99000040", pch = 3)
        vr <- tapply(route_id, vehicle, function(x) x[1])
        axis(2, at = 1:length(levels(vehicle)), lens[vr, "num"], las = 3, cex.axis = 0.8)
        axis(4, at = 1:length(levels(vehicle)), lens[vr, "num"], las = 3, cex.axis = 0.8)
        ## ETAs
        sapply(levels(vehicle), function(v) {
            ETAs <- do.call(rbind, strsplit(etas[vehicle == v], ","))
            mode(ETAs) <- "integer"
            tr <- apply(ETAs, 2, quantile, probs = c(0.025, 0.975))
            xx <- stops[stops$route_id %in% unique(route_id[vehicle == v]), "progress"]
            etaMin <- ifelse(tr[1, ] == 0, "",
                             format(as.POSIXct(tr[1, ], origin = "1970-01-01"), "%H:%M"))
            etaMax <- ifelse(tr[2, ] == 0, "",
                             format(as.POSIXct(tr[2, ], origin = "1970-01-01"), "%H:%M"))
            text(xx, which(levels(vehicle) == v), etaMin, cex = 0.6, pos = 1, offset = 0.5)
            text(xx, which(levels(vehicle) == v), etaMax, cex = 0.6, pos = 3, offset = 0.5)
        })
    })
    ##dev.off()
    dev.flush()
    Sys.sleep(10)
}
dev.flush()
head(stops)
stops
stops[!is.na(stops$distance),]
head(stops)
stops[!is.na(stops$distance),]
q()
